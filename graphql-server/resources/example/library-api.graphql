type Author implements Person {
  name: String!
  knows: [Person]
  description: String
  age: Int
  id: ID!
}

type Book {
  title: String!
  authors: [Author!]
  genre: Genre!
  id: ID!
}

union Combo = Reader | Book

enum Genre {
  FANTASY
  ROMANCE
  HORROR
}

type Movie {
  title: String!
  director: String!
  producer: Person
  genre: Genre!
  id: ID!
}

interface Person {
  name: String!
  knows: [Person]
  age: Int
  id: ID!
}

type Query {
  book(id: ID!): Book
  movie(id: ID!): Movie
  author(id: ID!): Author
  reader(id: ID!): Reader
  person(id: ID!): Person
  combo(id: ID!): Combo
  books: [Book]
  movies: [Movie]
  authors: [Author]
  readers: [Reader]
  persons: [Person]
  combos: [Combo]
}

type Reader implements Person {
  name: String!
  knows: [Person]
  favourite_book: Book
  age: Int
  id: ID!
}

